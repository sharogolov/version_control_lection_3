# Иструкция для работы с Git и удаленными репозиториями.
## Что такое Git?
Git - Это одна из реализаций распределенных систем контроля версий, имеющая как локальные, так и удаленные репозитории. Является самой популярной реализацией систем контроля версий в мире.
# Подготовка репозитория
Для создания репозитория необходимо выполнить команду **"git init"** в папке с репозиторием и у Вас создасться репозиторий (появится скрытая папка .git)
# Создание коммитов
 ## **Git add**
 Для добавления изминений в коммит используйте команду
 **git add**. Чтобы использовать команду **git add** напишите
 **git add <имя файла>**. Чтобы не писать имя файла целиком можно использавать такой вариант: Пишем первые три буквы файла и нажимаем Tab, имя файла заполнится автоматически.
 ## **Git commit**
Для того чтобы создать коммит (сохранение) необходимо выполнить команду **git commit**. 
выполняется она так: **git commit -m "Ваш комментарий".(Где -m - это сокрощение от messange)**
## **Git status**
Для  того чтобы просмотреть состояние репозитория используется команда **git status**. Для этого необходимо в папке с репозиторием написать **git status**, и вы увидите были ли изминения в файлах, или их не было.
## **Git log**
Команда **git log** позволяет посмотреть журнал всех изменений. **Git
log** выводит журнал всех изменений, которые мы делали.
## **Git checkout**
Для того, чтобы перемещаться между коммитами, выполняется команда **git checkout**. Используется она в папке с репозиторием таким образом: **git checkout <Имя коммита>.
достаточно использовать четыре первых символа(В имени комнаты) для вызова этой комнаты.
## **Git diff(difference)**
Команда **git diff** как **difference** — отличие, разница. Она позволяет
посмотреть, чем отличается наш текущий файл от того, что уже сохранено, или закоммичино.
Мы видим, что минусом показываются удалённые строки, а плюсом — добавленные.
# **Продолжение команд, из лекции 2...**
## **Git branch**
C помощью команды **git branch** мы сможем создать новую ветку, где будем редактировать текст, но одной этой команды не достаточно, мы должны дополнить её именем. это будет выглядеть так: **git branche NAME**(где NAME это имя новой ветки).
## **Git merge**
Чтобы слить любую ветку с текущей, вызываем
**git merge** <имя ветки для слияния с текущей>
## **Git branch -d**
С помощью команды **git branch -d <Имя ветки которую хотим удалить>, мы можем удалить ветку которую хотим.
## **Git log --graph**
Ключ -graf в связке с командой log позволяет отобразить коммиты в виде дерева.С помощью этой команды мы вызываем визуализацию веток.git
## **Выделение текста**
**Жирный** - (Чтобы выделить текст __жирным__ используются **(в области и в конце области которую хотите выделить), а так же для выделения жирным используется двойное нижнее подчеркивание__, Двойное нижнее подчеркивание так же ставится в начале и в конце выбранной области!)

*Курсив* - Чтобы выделить область курсивом используется символ * или _(одно нижнее подчеркивание), в начале и в конце выделяемой области.

~~Зачеркнутый текст~~ - Для того чтобы зачеркнуть текст используется двойной символ ~~, с каждой стороны выбранной области.
## **Списки**
__Не нумерованные списки__ - вызываются символом *, то есть *-ПРОБЕЛ-Название.
* Элемент 1
* Элемент 2
* Элемент 3

__Нумерованные списки__ - Для того чтобы создать нумерованые списки, используйте в начале строки цифру с точкой.

1. Элемент 1
2. Элемент 2
3. Элемент 3
## **Цитаты**
Цытаты оформляются одной угловой скобкой в начале текста.
> Здесь моя цитата!
## **Ссылки**
Чтобы поставить гиперссылку без анкора, нужно взять URL в угловые скобки. С e-mail – аналогично.

Если вставлять с анкором, то тогда текст ссылки заключается в квадратные скобки, а адрес страницы – в круглые. Рядом с URL можно прописать тайтл, его объявляют в кавычках (он тоже остается внутри круглых скобок).

Это [ссылка]( https://www.youtube.com/live/IDw96s-BDyY?feature=share "Лекция 1") с тайтлом.

[Эта ссылка](https://www.youtube.com/live/IDw96s-BDyY?feature=share) без заголовка.

<https://www.youtube.com/live/IDw96s-BDyY?feature=share – а это безанкорная ссылка.
## **Картинки**
Чтобы вставить изображение в текст, нужно написать следующее:
1. !
2. []
3. ()
![Привет Друг!](Hello.jpg)
Для того чтобы скрыть файл или картинку, нужно создать новый файл с названием .gitignore, и в появившемся окне написать имя с его расширением. После этого окно терминала не будет выводить это файл как не сохраненный!
## **Таблицы**
В этом разделе пока нет информации, она будет доступна после 3 лекции!